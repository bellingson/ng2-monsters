{"version":3,"sources":["util/rest-service.ts"],"names":[],"mappings":";;;;;;;;;;;;YAKA;gBAII,qBAAmB,OAAe,EAAS,IAAU;oBAAlC,YAAO,GAAP,OAAO,CAAQ;oBAAS,SAAI,GAAJ,IAAI,CAAM;oBAF9C,YAAO,GAAW,IAAI,cAAO,EAAE,CAAC;oBAGnC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;gBAC5D,CAAC;gBAEM,2BAAK,GAAZ;oBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;yBAC7B,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAE,EAAR,CAAQ,CAAC,CAAC;gBAC5B,CAAC;gBAGM,yBAAG,GAAV,UAAW,EAAE;oBACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;yBACxC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAE,EAAR,CAAQ,CAAC,CAAC;gBAC5B,CAAC;gBAEM,0BAAI,GAAX,UAAY,IAAI;oBAEZ,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;oBACvB,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;wBACV,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;oBACzB,CAAC;oBAED,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;oBAEhC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;wBACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;6BACrD,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAE,EAAR,CAAQ,CAAC,CAAC;oBAC5B,CAAC;oBAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;yBACtD,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAE,EAAR,CAAQ,CAAC,CAAC;gBAC5B,CAAC;gBAEM,4BAAM,GAAb,UAAc,IAAI;oBACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;yBAChD,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAE,EAAR,CAAQ,CAAC,CAAC;gBAC5B,CAAC;gBAIL,kBAAC;YAAD,CA5CA,AA4CC,IAAA;YA5CD,qCA4CC,CAAA","file":"util/rest-service.js","sourcesContent":["import { Http, Headers } from 'angular2/http';\n\nimport 'rxjs/Rx';\nimport {Observable} from 'rxjs';\n\nexport class RestService {\n\n    public headers:Headers = new Headers();\n\n    constructor(public baseUrl: string, public http: Http) {\n        this.headers.append('Content-Type', 'application/json');\n    }\n\n    public query(): Observable<any> {\n        return this.http.get(this.baseUrl)\n            .map(r => r.json());\n    }\n\n\n    public get(id): Observable<any> {\n        return this.http.get(this.baseUrl + '/' + id)\n            .map(r => r.json());\n    }\n\n    public save(item): Observable<any> {\n\n        var url = this.baseUrl;\n        if (item.id) {\n            url += '/' + item.id;\n        }\n\n        var body = JSON.stringify(item);\n\n        if (item.id) {\n            return this.http.put(url, body, { headers: this.headers })\n                .map(r => r.json());\n        }\n\n        return this.http.post(url, body, { headers: this.headers })\n            .map(r => r.json());\n    }\n\n    public delete(item): Observable<any> {\n        return this.http.delete(this.baseUrl + '/' + item.id)\n            .map(r => r.json());\n    }\n\n\n\n}"],"sourceRoot":"/source/"}