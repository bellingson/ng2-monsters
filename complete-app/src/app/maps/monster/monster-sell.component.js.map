{"version":3,"sources":["monster/monster-sell.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAkBA;gBAMI,qBAAY,WAAwB,EAAU,MAAc,EAAU,cAAgC,EAAU,cAA8B;oBAAhG,WAAM,GAAN,MAAM,CAAQ;oBAAU,mBAAc,GAAd,cAAc,CAAkB;oBAAU,mBAAc,GAAd,cAAc,CAAgB;oBAE1I,IAAI,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAChC,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;wBACL,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC;oBAC/B,CAAC;gBAEL,CAAC;gBAED,8BAAQ,GAAR;oBAEI,EAAE,CAAA,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;wBAET,IAAI,CAAC,YAAY,EAAE,CAAC;oBAExB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,YAAY;wBACZ,IAAI,CAAC,OAAO,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,sEAAsE,EAAE,WAAW,EAAE,wdAAwd,EAAE,CAAC;oBAE9oB,CAAC;gBACL,CAAC;gBAED,kCAAY,GAAZ;oBAAA,iBAKC;oBAHG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;yBAC3B,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,OAAO,GAAG,IAAI,EAAnB,CAAmB,CAAC,CAAC;gBAEhD,CAAC;gBAGD,iCAAW,GAAX;oBAAA,iBAaC;oBAXG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;yBACjC,SAAS,CAAC;wBAEP,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,kCAAkC,EAAE,GAAG,CAAC,CAAC;wBACrE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBAEvC,CAAC,EAAC,UAAC,KAAK;wBACJ,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;oBAC5C,CAAC,CAAC,CAAC;gBAGX,CAAC;gBAED,mCAAa,GAAb;oBAEI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBAEvC,CAAC;gBAED,gCAAU,GAAV;oBAAA,iBAWC;oBATG,EAAE,CAAA,CAAC,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC;wBACtD,MAAM,CAAC;oBAEX,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;yBACnC,SAAS,CAAC;wBACP,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,2BAA2B,EAAE,WAAW,CAAC,CAAC;wBACtE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBACvC,CAAC,CAAC,CAAC;gBAEX,CAAC;gBA1EL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,cAAc;wBACxB,UAAU,EAAE,CAAC,+BAAS,EAAE,mBAAU,CAAE;wBACpC,WAAW,EAAE,+BAA+B;qBAC/C,CAAC;;+BAAA;gBAyEF,kBAAC;YAAD,CAvEA,AAuEC,IAAA;YAvED,qCAuEC,CAAA","file":"monster/monster-sell.component.js","sourcesContent":["\nimport {Component, OnInit} from \"angular2/core\";\n\nimport {Router} from \"angular2/router\";\nimport {RouteParams} from \"angular2/router\";\nimport {RouterLink} from \"angular2/router\";\n\nimport {MonsterService} from \"./monster-service\";\nimport {UIMessageService} from \"../util/uimessage-service\";\nimport {UIMessage} from \"../util/uimessage.component\";\n\n\n@Component({\n    selector: 'monster-sell',\n    directives: [UIMessage, RouterLink ],\n    templateUrl: 'app/monster/monster-sell.html'\n})\n\nexport class MonsterSell implements OnInit{\n\n    id: number;\n\n    monster: any;\n\n    constructor(routeParams: RouteParams, private router: Router, private messageService: UIMessageService, private monsterService: MonsterService) {\n\n        var sid = routeParams.get('id');\n        if(sid) {\n            this.id = parseInt(sid,10);\n        }\n\n    }\n\n    ngOnInit() {\n\n        if(this.id) {\n\n            this.fetchMonster();\n\n        } else {  // create new monster\n            // test data\n            this.monster = { name: \"Jaws\", type: \"Fish\", birthday: \"1975/07/21\", price: 6000000, img: \"https://upload.wikimedia.org/wikipedia/en/e/eb/JAWS_Movie_poster.jpg\", description: \"Jaws is a 1975 American film directed by Steven Spielberg and based on Peter Benchley's 1974 novel of the same name. The prototypical summer blockbuster, its release is regarded as a watershed moment in motion picture history. In the story, a giant man-eating great white shark attacks beachgoers on Amity Island, a fictional New England summer resort town, prompting the local police chief to hunt it with the help of a marine biologist and a professional shark hunter.\" };\n            // this.monster = { };\n        }\n    }\n\n    fetchMonster() {\n\n        this.monsterService.get(this.id)\n            .subscribe(data => this.monster = data);\n\n    }\n\n\n    sellMonster() {\n\n        this.monsterService.save(this.monster)\n            .subscribe(() => {\n\n                this.messageService.message('Your monster is now up for sale!', '/');\n                this.router.navigate(['Monsters']);\n\n            },(error) => {\n                this.messageService.errorMessage(error);\n            });\n\n\n    }\n\n    cancelClicked() {\n\n        this.router.navigate(['Monsters']);\n\n    }\n\n    cancelSale() {\n\n        if(!confirm(\"Are you sure you want to cancel this sale?\"))\n            return;\n\n        this.monsterService.delete(this.monster)\n            .subscribe(() => {\n                this.messageService.message(\"Your sale is now canceled\", '/monsters');\n                this.router.navigate(['Monsters']);\n            });\n\n    }\n\n\n}"],"sourceRoot":"/source/"}